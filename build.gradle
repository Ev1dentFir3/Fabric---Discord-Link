buildscript {
    repositories {
		jcenter()
        maven {
            name = "Fabric"
            url = "https://maven.fabricmc.net/"
        }
		maven { 
			name = "Jitpack"
			url 'https://jitpack.io/'
		}
	}
	dependencies {
        classpath 'com.github.Chocohead:Fabric-Loom:97d30fb'
	}
}

apply plugin: "fabric-loom"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + project.minecraft_version
group = project.maven_group

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { 
		name = "Jitpack"
		url "https://jitpack.io/"
	}
}

minecraft {
}

dependencies {
    // fabric loader requires log4j, guava, and gson
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
    implementation 'com.google.guava:guava:28.0-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // mixin and fabric loader need asm 8
    implementation 'org.ow2.asm:asm:8.0'
    implementation 'org.ow2.asm:asm-analysis:8.0'
    implementation 'org.ow2.asm:asm-commons:8.0'
    implementation 'org.ow2.asm:asm-tree:8.0'
    implementation 'org.ow2.asm:asm-util:8.0'




	//to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings files("MCPYarn-1.2.5-2.jar")

	modImplementation "com.github.minecraft-cursed-legacy:cursed-fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	// modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompile "org.javacord:javacord-api:${project.javacord_version}"
    modCompile "org.javacord:javacord-core:${project.javacord_version}"
	modCompile "com.vdurmont:emoji-java:5.1.1"
    modCompile 'com.google.code.gson:gson:2.8.6'

	include "org.javacord:javacord-api:${project.javacord_version}"
    include "org.javacord:javacord-core:${project.javacord_version}"
	include "com.squareup.okhttp3:okhttp:3.9.1"
	include "com.squareup.okhttp3:logging-interceptor:3.9.1"
	include "com.fasterxml.jackson.core:jackson-databind:2.9.3"
	include "com.fasterxml.jackson.core:jackson-annotations:2.9.0"
	include "com.fasterxml.jackson.core:jackson-core:2.9.3"
	include "com.neovisionaries:nv-websocket-client:2.6"
	include "com.squareup.okio:okio:1.13.0"
	include "org.json:json:20170516"
	include "org.apache.logging.log4j:log4j-api:2.11.0"

	include "com.vdurmont:emoji-java:5.1.1"
    include 'com.google.code.gson:gson:2.8.6'
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}